goal: edges: up: white-back white-right white-front white-left
branches:
    if: white-front at up-front
        do: y
    if: white-front at front-up
        do: F R' D' R F2 y
    if: white-front at down-front
        do: F2 y
    if: white-front at front-down
        do: D R F' R' y
    prepare:
        pos = find(white-front)
        frontdown = (white-front at front-down) or (white-front at down-front) 
        if: pos.Down
            goal: frontdown
                do: D
        if: pos.Front
            if: pos.Left
                do: F
            if: pos.Right
                do: F'
        if: pos.Up
            do: pos.other(Up)2
                goal: frontdown
                    do: D
        if: pos.Back
            if: pos.Left
                do: L' D L
            if: pos.Right
                do: R D' R'
    trials: 3
        